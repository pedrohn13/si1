<?xml version="1.0" encoding="iso-8859-1" ?>
<project name="Lab02" default="start" basedir=".">
	<property name="sysName" value="Lab02" />
	<property name="warFile" value="dist/${sysName}.war" />
	<property name="proj.name" value="Lab02" />
	<property name="source.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="build.dir" value="bin" />
	<property name="dist.dir" value="dist" />
	<property name="lib.dir" value="lib" />
	<property name="reports.tests" value="Relatorio" />
	<property name="main.class" value="Main.class" />
	<property name="webLibs" value="WebContent/WEB-INF/lib" />
	<property name="webXML" value="WebContent/WEB-INF/web.xml" />
	<property name="webContent" value="WebContent" />
	<property name="sysLibs" value="lib" />
	<property name="CATALINA_HOME" value="C:\Java\apache-tomcat-7.0.41" />


	<!-- target limpa - limpa os diretorios criados no workspace-->
	<target name="limpa" description="limpa o workspace">
		<echo> Limpando projeto... </echo>
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${reports.tests}" />
		<delete>
			<fileset defaultexcludes="no" dir="${source.dir}" includes="**/*~" />
		</delete>
		<echo> Projeto limpo. </echo>
	</target>

	<!-- target init - cria os diretorios para compilacao e distribuicao -->
	<target name="init" description="prepara os diretorios de compilacao">
		<echo> Criando as pastas </echo>
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${reports.tests}" />
		<echo> Pastas criadas. </echo>
	</target>

	<!-- target compila -gera os .class e os coloca no diretorio (bin)-->
	<target name="compila" depends="init" description="compila o codigo java">
		<echo> Compilando o projeto... </echo>
		<path id="lib">
			<fileset dir="${lib.dir}" includes="*.jar" />
		</path>
		<javac sourcepath="" srcdir="." includeantruntime="false" classpathref="lib" destdir="${build.dir}">
			<include name="${source.dir}/**/*.java" />
			<include name="${test.dir}/**/*Test*.java" />
		</javac>
		<echo> Projeto compilado. </echo>
	</target>

	<!-- ================================= 
	          target: war              
	         ================================= -->
	<target name="war" depends="compila" description="Criar war do projeto.">
		<echo>Criando War do projeto.</echo>
		<war destfile="${warFile}" webxml="${webXML}">
			<classes dir="${build}" />
			<fileset dir="${webContent}" />
			<lib dir="${webLibs}" />
		</war>
	</target>

	<!-- ================================= 
		          target: deploy              
		     ================================= -->
	<target name="deploy" depends="war">
		<copy todir="${CATALINA_HOME}\webapps" file="dist/${sysName}.war" />
	</target>

	<!-- ================================= 
		          target: start         
		     ================================= -->
	<target name="start" depends="stop,limpa,deploy">
		<exec executable="cmd">
			<arg value="/c" />
			<arg value="${CATALINA_HOME}\bin\startup.bat" />
		</exec>
	</target>

	<!-- ================================= 
		          target: stop      
		     ================================= -->
	<target name="stop">
		<exec executable="cmd">
			<arg value="/c" />
			<arg value="${CATALINA_HOME}\bin\shutdown.bat" />
		</exec>
	</target>

	<!-- target testa - Testa o projeto -->
	<target name="testa" depends="compila">
		<junit printsummary="yes" haltonfailure="no">
			<formatter type="xml" />
			<!-- Indica o caminho dos arquivos .class (incluindo as bibliotecas)-->
			<classpath>
				<fileset dir="${lib.dir}" includes="*.jar" />
				<pathelement location="${build.dir}" />
			</classpath>
			<!-- Executa todos os arquivos no formato **/*Test*.class , ou seja, todos os .class com Test no nome-->
			<batchtest fork="yes" todir="${reports.tests}">
				<fileset dir="${build.dir}" includes="**/*Test*.class" />
			</batchtest>
		</junit>
	</target>

	<!-- target dist - gera o jar do projeto no diretorio ${build.dir}" -->
	<target name="dist" depends="compila">
		<echo> Generating dist (.jar package)  ...</echo>
		<jar jarfile="${dist.dir}/lab1.jar" basedir="${build.dir}">
			<!-- Tornando o jar executavel-->
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
			</manifest>
		</jar>
		<echo> Dist generated with success. </echo>
	</target>
</project>